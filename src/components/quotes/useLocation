; // Теперь, чтение значений параметров запроса также относительно прост,
; // но нам нужно использовать еще один крючок предоставляется React Router DOM, хук useLocation.

; // Где useHistory дает нам доступ к объекту истории, объект, который позволяет нам изменять и управлять URL-адресом,
; // useLocation дает нам доступ к объекту местоположения который содержит информацию о загруженной в данный момент странице,
; // о текущем загруженном URL.

; // Я просто логирую здесь местоположение непосредственно в функции компонента.
; // При этом, если я открою инструменты разработчика, если я перезагружу, мы увидим этот объект,
; // это наш объект местоположения. И здесь мы видим немного информации. Мы видим имя пути, например, страницы, которая была загружена.
; // И мы видим это свойство поиска, который содержит данные наших параметров запроса. И это очень интересно.
; // Также интересно то, что если я нажму «Сортировать по возрастанию», мы видим, что этот объект местоположения попадает в систему снова и снова.
; // Итак, это означает, что размещение этой страницы здесь фактически перерисовывает этот компонент.

; // И это действительно имеет смысл потому что, когда мы нажимаем на страницу, даже если это страница,
; // на которой мы сейчас находимся, затем этот компонент страницы переоценивается,
; // потому что React Router видит, что мы изменили историю и поэтому повторно отображает страницу
; // которые должны быть показаны нам, даже если это страница, на которой мы сейчас находимся.
; // И это полезный механизм который мы будем использовать в наших интересах через пару минут.
